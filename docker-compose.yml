
version: '3.8'
services:
  redis:
    container_name: redis
    image: redis
    hostname: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: host
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    restart: always

  # redis-commander:
  #   container_name: redis-commander
  #   hostname: redis-commander
  #   image: rediscommander/redis-commander:latest
  #   restart: always
  #   environment:
  #   - REDIS_HOSTS=local:redis:6379
  #   ports:
  #   - "8887:8887"

  nx-ms-greeting:
    build:
      context: .
      dockerfile: /home/duard/zdev/chatclass-org/apps/microservices/ms-greeting/Dockerfile
      target: development
    depends_on:
      - redis
    environment:
     redis_server_addr: redis
    ports:
      - 5001:5001
    expose:
      - "6379"
    links:
      - redis
    restart: on-failure
    volumes:
      - .:/app
      - ms-ms-greeting_vol:/usr/src/ms-greeting/
      - node_modules:/usr/src/node_modules/
    networks:
      - monorepo_net

  # nx-chatclass:
  #   build:
  #     context: .
  #     dockerfile: /home/duard/zdev/chatclass-org/apps/api-chat-class/Dockerfile
  #     target: development
  #   env_file: env.dev
  #   depends_on:
  #     - redis
  #   environment:
  #    redis_server_addr: redis
  #   ports:
  #     - 3001:3001
  #   links:
  #     - redis
  #   restart: on-failure
  #   volumes:
  #     - .:/app
  #     - api-chatclass_vol:/usr/src/api-chat-class/
  #     - node_modules:/usr/src/node_modules/
  #   networks:
  #     - monorepo_net

volumes:
  api-chatclass_vol:
  api-bot-whatsapp_vol:
  ms-ms-greeting_vol:
  node_modules:
  postgres_data:
  redis_data:

networks:
  monorepo_net:
    driver: bridge

